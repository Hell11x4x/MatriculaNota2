
package cPresentacion;

import cNegocio.UserService;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;

public class RegisterWindow extends javax.swing.JPanel {
    private final UserService userService;
    
    private boolean warningShown = false;

    /**
     * Creates new form RegisterWindows
     */
    public RegisterWindow() {
        initComponents();
        userService = new UserService();
        
        // Centrar la ventana en la pantalla
        SwingUtilities.invokeLater(() -> {
            JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
            frame.setLocationRelativeTo(null);
      
        });
        
        //Las validaciones lo estoy haciendo llamando a las variables de las casillas y no en las casillas
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
        @Override
        public void focusLost(java.awt.event.FocusEvent evt) {
            String username = txtUsername.getText();

            if (!username.isEmpty() && !username.matches("(\\b[A-Z][a-z]*\\b\\s*)+")) {
                JOptionPane.showMessageDialog(null, "Cada palabra debe comenzar con mayúscula.", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtUsername.requestFocus();
            } 
        }
        });
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
            String correo = txtEmail.getText();
            String dominio = "@upla.edu.pe";

            if (!correo.isEmpty() && !correo.endsWith(dominio)) {
                JOptionPane.showMessageDialog(null, "El correo debe terminar en " + dominio, "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtEmail.requestFocus();
            }
        }
        });
        txtPassContraseña.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
            String contraseña = txtPassContraseña.getText();
            String regex = "^(?=.*[a-z])(?=.*[A-Z]).+$";

            if (!contraseña.isEmpty() && !contraseña.matches(regex)) {
            JOptionPane.showMessageDialog(null, "Combina entre Mayúscula y Minúscula.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtPassContraseña.requestFocus();
            }
        }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUsuario = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblContraseña = new javax.swing.JLabel();
        txtPassContraseña = new javax.swing.JPasswordField();
        btnRegistrar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lblCardHeader = new javax.swing.JLabel();

        setInheritsPopupMenu(true);
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblUsuario.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblUsuario.setText("Usuario");
        add(lblUsuario, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtUsernameKeyReleased(evt);
            }
        });
        add(txtUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 340, 30));

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblEmail.setText("Email");
        add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtEmailKeyReleased(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 340, 30));

        lblContraseña.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        lblContraseña.setText("Contraseña");
        add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 260, -1, -1));
        add(txtPassContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 340, 30));

        btnRegistrar.setBackground(new java.awt.Color(85, 110, 230));
        btnRegistrar.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.setBorder(null);
        btnRegistrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 340, 30));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCardHeader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Card_Header.jpg"))); // NOI18N
        lblCardHeader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(lblCardHeader, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 0, 410, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 380, 380));

        getAccessibleContext().setAccessibleName("");
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        String username = txtUsername.getText();
    String email = txtEmail.getText();
    String password = new String(txtPassContraseña.getPassword());

    // Verificar si los campos están vacíos
    if (username.isEmpty() || email.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Faltan campos por rellenar.", "Error", JOptionPane.ERROR_MESSAGE);
    } else {
        // Verificar si los campos cumplen con las validaciones
        if (!username.matches("(\\b[A-Z][a-z]*\\b\\s*)+")) {
            JOptionPane.showMessageDialog(null, "Cada palabra debe comenzar con mayúscula.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtUsername.requestFocus();
            return;
        } 
        if (!email.endsWith("@upla.edu.pe")) {
            JOptionPane.showMessageDialog(null, "El correo debe terminar en @upla.edu.pe", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtEmail.requestFocus();
            return;
        }
        if (!password.matches("^(?=.*[a-z])(?=.*[A-Z]).+$")) {
            
            txtPassContraseña.requestFocus();
            return;
        }

        if (userService.register(username, email, password)) {
            // Registro exitoso, mostrar mensaje de bienvenida
            JOptionPane.showMessageDialog(this, "Registro Exitoso! Bienvenido " + username, "Éxito", JOptionPane.INFORMATION_MESSAGE);
        } else {
            // Registro fallido, mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Registro fallido. Por favor, intenta de nuevo.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUsernameActionPerformed

    private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
        
    }//GEN-LAST:event_txtUsernameKeyPressed
   
    private void txtUsernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyReleased
        
    }//GEN-LAST:event_txtUsernameKeyReleased

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtEmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyReleased
        
    }//GEN-LAST:event_txtEmailKeyReleased

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        
    }//GEN-LAST:event_txtEmailFocusLost
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblCardHeader;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblUsuario;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JPasswordField txtPassContraseña;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    String getUsername() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    String getEmail() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    String getPassword() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
    
    
}
